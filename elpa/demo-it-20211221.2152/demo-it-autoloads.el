;;; demo-it-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from demo-it.el

(autoload 'demo-it-start "demo-it" "\
Start the current demonstration and kick off the first step.
STEPS is a list of functions or keystrokes to execute.
If nil, the STEPS must be specified by a call to `demo-it-create'.

The optional ADVANCED-MODE turns on keybindings where <F12>
advances the steps instead of Space.  This mode is better for
more interactive demonstrations.

(fn &optional STEPS ADVANCED-MODE)" t)
(autoload 'demo-it-create "demo-it" "\
Create and store an ordered list of steps and configuration
values. The FORMS can be either function names, expressions or
keywords, like `:advanced-mode' and `:variable-width'.

(fn &rest FORMS)" nil t)
(register-definition-prefixes "demo-it" '("demo-it-"))


;;; Generated autoloads from demo-it-custom.el

(register-definition-prefixes "demo-it-custom" '("demo-it--"))


;;; Generated autoloads from demo-it-extras.el

(register-definition-prefixes "demo-it-extras" '("demo-it-"))


;;; Generated autoloads from demo-it-present.el

(autoload 'demo-it-single-presentation "demo-it-present" "\
Demonstration that presents an `org-mode' FILE as a
full-screen presentation. SIZE is the text scaling size, and STYLE is the presentation 

(fn FILE &optional SIZE STYLE SECTION)" t)
(register-definition-prefixes "demo-it-present" '("demo-it-"))

;;; End of scraped data

(provide 'demo-it-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; demo-it-autoloads.el ends here
